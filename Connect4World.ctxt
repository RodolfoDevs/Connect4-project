#BlueJ class context
comment0.params=col
comment0.target=int\ getX(int)
comment0.text=\r\n\ \ given\ a\ specific\ column\ number\ in\ the\ game,\ returns\ the\ middle\ of\r\n\ \ \ \ \ \ \ \ the\ column's\ x-value\ in\ the\ world\r\n\ @param\ col\ -\ The\ column\ number\ (0..7)\ of\ the\ column\ in\ question\r\n
comment1.params=row
comment1.target=int\ getY(int)
comment1.text=\r\n\ given\ a\ specific\ row\ number\ in\ the\ game,\ returns\ the\ middle\ of\r\n\ \ \ \ \ \ \ \ the\ row's\ world\ y-value\ \r\n\ @param\ row\ -\ The\ row\ number\ (0..7)\ of\ the\ row\ in\ question\r\n
comment10.params=checkingRow\ colChecked\ count
comment10.target=int\ getVerticalCount(int,\ int,\ int)
comment10.text=\r\n\ given\ the\ row\ and\ column\ number\ of\ the\ space\ (cell)\ below\ the\ one\ where\ the\ last\ ball\ was\ placed,\ it\ starts\ counting\r\n\ how\ many\ balls\ of\ the\ same\ type\ are\ there,\ and\ return\ that\ count\ at\ the\ end.\r\n\ @param\ checkingRow\ -\ the\ row\ below\ the\ row\ where\ the\ last\ ball\ is\ located\r\n\ @param\ colChecked\ -\ the\ column\ where\ the\ last\ ball\ is\ located\r\n\ @param\ count\ -\ number\ of\ balls\ connected\ vertically.\ It\ starts\ at\ 1\ because\ method\ starts\ checking\ one\ place\ below.\r\n
comment11.params=row\ checkingCol\ count
comment11.target=int\ getHorizontalCount(int,\ int,\ int)
comment11.text=\r\n\ Return\ number\ of\ balls\ connected\ horizontally,\ given\ the\ row\ and\ column\ number\ of\ the\ cell\ to\ the\ left.\ It\ starts\ checking\r\n\ to\ the\ left\ of\ where\ the\ last\ ball\ was\ placed,\ and\ then\ checks\ to\ the\ right.\r\n\ @param\ row\ -\ row\ where\ the\ last\ ball\ was\ placed.\r\n\ @param\ chekingCol\ -\ column\ to\ the\ left\ of\ the\ one\ where\ the\ last\ ball\ was\ placed\r\n\ @param\ count\ -\ number\ of\ ball\ connected\ horizontally.\ It\ starts\ at\ 1\ because\ method\ starts\ checking\ one\ cell\ to\ the\ left.\r\n
comment12.params=checkRow\ checkCol\ rowsMoved\ colsMoved\ direction\ directionAux\ count
comment12.target=int\ getDiagonalCount(int,\ int,\ int,\ int,\ java.lang.String,\ int,\ int)
comment12.text=\r\n\ Returns\ the\ number\ of\ balls\ connnected\ diagonally.\ It\ starts\ checking\ the\ cell\ to\ the\ right\ down\ of\ where\ the\ last\ ball\ was\ placed\r\n\ It\ keeps\ checks\ down\ right;\ then\ checks\ up\ left\ (diagonal\ right-left).\ If\ it\ finds\ 4\ balls\ connected\ in\ that\ direction,\ then\ it\ \r\n\ returns\ the\ count,\ and\ STOPS\ checking.\ Otherwise,\ it\ keeps\ checking\ down\ left\ and\ then\ up\ right\ (diagonal\ left-right).\r\n\ \r\n\ @param\ checkRow\ -\ row\ of\ the\ cell\ that\ will\ be\ checked\r\n\ @param\ checkCol\ -\ column\ of\ the\ cell\ that\ will\ be\ checked\r\n\ @param\ rowsMoved\ -\ number\ of\ rows\ moved\ from\ the\ one\ where\ the\ last\ ball\ was\ placed\r\n\ @param\ colsMoved\ -\ number\ of\ columns\ moved\ from\ the\ one\ where\ the\ last\ ball\ was\ placed\r\n\ @param\ direction\ -\ diagonal\ direction\ that\ is\ being\ checked\r\n\ @param\ directionAux\ -\ number\ that\ tells\ if\ it\ checking\ down-right(1)\ or\ up-left(-1),\ \ or\ down-left(1)\ or\ up-right(-1),\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ according\ to\ the\ specified\ diagonal\ direction\r\n\ @param\ count\ -\ number\ of\ balls\ connected\ diagonally.\ It\ starts\ at\ 1\ because\ it\ counts\ the\ last\ ball\ placed\r\n
comment2.params=xVal
comment2.target=int\ getCol(int)
comment2.text=\r\n\ given\ a\ specific\ world\ x-Value,\ returns\ the\ corresponding\ column\r\n\ \ \ \ \ \ \ \ number.\r\n\ @param\ xVal\ -\ The\ world\ x-value\ in\ question\r\n
comment3.params=winnerName
comment3.target=void\ displayWinner(java.lang.String)
comment3.text=\r\n\ draw\ a\ string\ indicating\ someone\ won\ the\ game.\r\n\ @param\ winnerName\ -\ the\ name\ of\ the\ player\ taht\ won\ the\ game\r\n
comment4.params=column
comment4.target=int\ getRow(int)
comment4.text=\r\n\ Given\ a\ specific\ column,\ finds\ the\ row\ where\ the\ ball\ will\ be\ placed\r\n\ @param\ \ column\ -\ the\ selected\ column\ where\ the\ ball\ was\ placed\r\n
comment5.params=
comment5.target=Connect4World()
comment5.text=\r\n\ Constructor\ for\ objects\ of\ class\ Connect4World.\r\n\ \r\n
comment6.params=col
comment6.target=boolean\ columnFull(int)
comment6.text=\r\n\ YOU\ WILL\ NEED\ TO\ CODE\ THIS,\ OR\ BALLS\ WILL\ "OVERFLOW"\ THE\ COLUMNS\!\!\!\r\n\ This\ function\ should\ return\ true\ if\ the\ column\ already\ has\ 8\ balls\r\n\ \ \ in\ it;\ otherwise\ it\ should\ return\ false.\r\n\ @param\ col\ -\ the\ column\ number\ to\ check\r\n
comment7.params=
comment7.target=void\ act()
comment7.text=\r\n\ yes,\ a\ world\ can\ act\ in\ the\ same\ way\ as\ an\ Actor.\ In\ this\ case,\ \r\n\ \ \ \ the\ code\ just\ looks\ for\ mouse\ clicks\ and\ ...\ well,\ you\ have\ to\ \r\n\ \ \ \ figure\ out\ what\ else\ to\ do\ ...\r\n\ \ \ \ ...\ you\ may\ add\ code\ anywhere\ you\ want\ to\ in\ this\ method.\ \r\n
comment8.params=num
comment8.target=boolean\ ballFalling(int)
comment8.text=\r\n\ returns\ boolean\ value\ if\ a\ ball\ of\ a\ player\ is\ falling\ (true)\ or\ not\ (false)\r\n\ @param\ num\ -\ number\ that\ represents\ the\ ball\ of\ the\ player\ that\ has\ to\ be\ checked\ if\ it's\ falling\r\n
comment9.params=
comment9.target=boolean\ winTheGame()
comment9.text=\r\n\ method\ that\ checks\ if\ one\ the\ players\ won\ by\ connecting\ 4\ of\ their\ balls\ horizontally,\ vertically\ or\ diagonally\ and\ returns\r\n\ \ a\ boolean\ value.\ This\ method\ makes\ use\ of\ 3\ other\ methods\ that\ checks\ the\ count\ of\ balls\ in\ each\ direction,\ starting\r\n\ \ horizontally,then\ vertically,\ and\ then\ diagonally\r\n\ \ It\ doesn't\ need\ any\ arguments\ because\ it\ uses\ the\ instances\ variables\ rowToCheck,\ columnToCheck,\ and\ playerToCheck\r\n
numComments=13
